# Creates a Site Template Release 

name: Build and release Site Template

on: 
  workflow_dispatch:
    inputs:
      semantic_version:
        description: 'Semantic version (major | minor | patch)'
        required: true
        default: 'patch'

jobs:
  build_and_release:
    name: Build and release
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Install NPM dependencies
        run: npm install

      - name: Bump version and commit
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "Release action on behalf of ${{ github.actor }}"
          npm version ${{ github.event.inputs.semantic_version }} -m 'Release %s'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: false 

      - name: Build Site Template (using bumped version)
        run: npm run build-aem

      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./package.json

      - name: Extract name and version from package.json
        id: packageJson
        run: |
          echo ::set-output name=NAME::$(echo '${{ steps.package.outputs.content }}' | jq -r '.name')
          echo ::set-output name=VERSION::$(echo '${{ steps.package.outputs.content }}' | jq -r '.version')
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.packageJson.outputs.VERSION }}
          release_name: ${{ steps.packageJson.outputs.NAME }}-${{ steps.packageJson.outputs.VERSION }}
          draft: false
          prerelease: true
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./${{ steps.packageJson.outputs.NAME }}-${{ steps.packageJson.outputs.VERSION }}.zip
          asset_name: ${{ steps.packageJson.outputs.NAME }}-${{ steps.packageJson.outputs.VERSION }}.zip
          asset_content_type: application/zip
